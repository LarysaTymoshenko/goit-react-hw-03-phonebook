{"version":3,"sources":["Section/Section.module.css","Filter/Filter.module.css","ListContacts/ListContact.module.css","Form/Form.module.css","Form/Form.jsx","Section/Section.jsx","ContactItem/ContactItem.jsx","ListContacts/ListContacts.jsx","Filter/Filter.jsx","App/App.jsx","index.js","ContactItem/ContactItem.module.css"],"names":["module","exports","Form","state","name","number","handleInput","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","htmlFor","label","input","type","pattern","title","required","onChange","button","Component","protoType","PropTypes","string","isRequired","onAddContact","func","Section","children","section","ContactItem","id","onDelete","itemText","onClick","ListContacts","contact","map","item","Filter","filter","onFilter","onInput","target","App","onCheckContact","alert","obj","nanoid","prevState","find","el","toUpperCase","onDeleteContacts","onFiltering","contacts","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContact","setItem","stringify","length","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eaae102.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3_Hfc\",\"title\":\"Section_title__JMtjo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label___gWHy\",\"input\":\"Filter_input__OgYDH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ListContact_list__2CVnm\",\"item\":\"ListContact_item__1UTWp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3xxnz\",\"input\":\"Form_input__3BDVU\",\"button\":\"Form_button__1g346\",\"label\":\"Form_label__1NDdQ\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Form.module.css\";\n\nexport default class Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInput = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.name, this.state.number);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label htmlFor=\"name\" className={s.label}>\n          NAME\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={this.handleInput}\n          />\n          {\"\"}\n        </label>\n        <label htmlFor=\"name\" className={s.label}>\n          NUMBER\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={s.input}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            value={this.state.number}\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={this.handleInput}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          {\" \"}\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.protoType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  onAddContact: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nfunction Section({ title = \"\", children }) {\n  return (\n    <div className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactItem.module.css\";\n\nfunction ContactItem({ id, name, number, onDelete }) {\n  return (\n    <>\n      <span className={s.itemText}>{name}</span>\n      <span className={s.itemText}>{number}</span>\n      <button\n        type=\"button\"\n        className={s.button}\n        data-id={id}\n        onClick={() => {\n          onDelete(id);\n        }}\n      >\n        Delete\n      </button>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport s from \"./ListContact.module.css\";\n\nconst ListContacts = ({ contact = [], onDelete }) => {\n  return (\n    <>\n      <ul>\n        {contact.map(({ id, name, number }) => (\n          <li key={id} className={s.item}>\n            <ContactItem\n              id={id}\n              name={name}\n              number={number}\n              onDelete={onDelete}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nListContacts.propTypes = {\n  listContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\nexport default ListContacts;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter({ filter = \"\", onFilter }) {\n  return (\n    <label htmlFor=\"name\" className={s.label}>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"name\"\n        className={s.input}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        value={filter}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onInput={(e) => {\n          onFilter(e.target.value);\n        }}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Form from \"../Form/Form\";\nimport Section from \"../Section/Section\";\nimport ListContacts from \"../ListContacts/ListContacts\";\nimport Filter from \"../Filter/Filter\";\n\nexport default class App extends Component {\n  state = {\n    contact: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contact');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n     this.setState({ contact: parsedContacts });\n    }\n  \n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    const nextContact = this.state.contact;\n    const prevContact = prevState.contact;\n\n    if (nextContact !== prevContact) {\n      localStorage.setItem('contact', JSON.stringify(nextContact))\n    }\n    \n  }\n  onAddContact = (name, number) => {\n    if (this.onCheckContact(name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const obj = { id: nanoid(), name, number };\n    this.setState((prevState) => ({ contact: [...prevState.contact, obj] }));\n  };\n\n  onCheckContact = (value) => {\n    return this.state.contact.find(\n      (el) => el.name.toUpperCase() === value.toUpperCase()\n    );\n  };\n  onDeleteContacts = (id) => {\n    this.setState((prevState) => ({\n      contact: prevState.contact.filter((el) => el.id !== id),\n    }));\n  };\n\n  onFiltering = (value) => {\n    this.setState({ filter: value });\n  };\n  render() {\n    const { contact, filter } = this.state;\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form onSubmit={this.onAddContact} />\n        </Section>\n        <Section title=\"Contact\">\n          {contact.length >= 2 && (\n            <Filter filter={filter} onFilter={this.onFiltering} />\n          )}\n          <ListContacts\n            contact={contact.filter((el) =>\n              el.name.toUpperCase().includes(filter.toUpperCase())\n            )}\n            onDelete={this.onDeleteContacts}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemText\":\"ContactItem_itemText__3-_th\",\"button\":\"ContactItem_button__76dbR\"};"],"sourceRoot":""}